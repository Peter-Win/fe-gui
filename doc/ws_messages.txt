Messages

askScripts: void - Ask Scripts from package.json (client)

commonInfo: object - Common information
  common:
    folderName: string - project root folder name.
  tech:

createApp: object - Create application
  common
    name: string
    description: string
    author: string
    license: string
  tech
    packageManager: 'Yarn' | 'NPM'
    bundler: 'WebPack'
    language: 'TypeScript' | 'JavaScript'
    transpiler: 'Babel' | 'TypeScript' | 'None'
    framework: 'None' | 'React'
    styleCss: bool
    styleLess: bool
  props: object Для каждой сущности может быть отдельный раздел со специфичными настройками

createEntityBegin: string - Начало создания сущности (server)
  name of entity
createEntityEnd: object - Окончание создания сущности (server)
  name: string
  status: Ok | Error
  message?: string
createEntityMsg: object - Сообщение о ходе создания проекта (server)
  name: string
  message: string - warning message
  type?: warn | err | info | success

errorAsJson: object - Global error of application
  code: string
  path: string

globalStatus: string - Global status of application (from server)
  load | init | error | create

installPackages: Array<Object> - client - Install packages
  packageName: string - name of single package
  dev: boolean - Use devDependencies

onCreateEnd - server - Процесс создания сущности закончен. (Клиент выведет кнопку Continue)

readyEntities: Array - Список сущностей, которые могут быть добавлены в приложение (server)
  name: string - name of entity

readyEntitiesAsk - (client)

scriptsDict: object - Scripts from package.json
  scripts: Map<string, string>

scriptFinished: string - Info about script finish
  name of script

searchPackage: string - Search package by name. (from client)

searchPackageResponse: object (from server)
  name: string
  package?: {name,version,description,...} see npmSearch.js
  error?: string

searchPackagesList: string - client - Search packages list by part of name.

searchPackagesListResponse: object - server
  name: string
  packages: Array<{name,version,description,...}> see npmSearch.js
  error?: string

setReady - client - Switch to ready status

startScript: string - Start script from package.json (client)

startUpgrade: string - (client) - Show form before entity upgrade

statusMessage: object - Send message about current process (server)
  text: string
  type: warn | err | info | success

upgradeCancel: void - (client) - Отмена добавления функциональности

upgradeEntity: Object - (client) - Пользователь нажал кнопку Upgrade на форме добавления сущности
  name: string
  params: Object - Данные из формы

upgradePromptAsk: string - client - Запрос данных для формы upgrade
  name - имя сущности

upgradePrompt: object - (server) - Данные для вывода формы добавления новой функциональности к приложению.
  name: string
  html: string
  params: Object - начальные данные для заполнения формы